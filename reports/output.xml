<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.1 (Python 3.8.5 on darwin)" generated="20210421 11:18:44.840" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="/Users/udaykumar/Documents/Workspace/Interviews_assignments/Validus/FrontEnd/tests">
<suite id="s1-s1" name="Testscripts" source="/Users/udaykumar/Documents/Workspace/Interviews_assignments/Validus/FrontEnd/tests/testscripts">
<suite id="s1-s1-s1" name="test Volt React Browse Dashboard" source="/Users/udaykumar/Documents/Workspace/Interviews_assignments/Validus/FrontEnd/tests/testscripts/test_Volt_React_Browse_Dashboard.robot">
<test id="s1-s1-s1-t1" name="Browse Volt React">
<kw name="Given browser is opened to Volt React Main page" library="VoltReactDashboardKeywords">
<kw name="Open Browser To Volt React Page" library="VoltReactDashboardKeywords">
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210421 11:18:44.946" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7f9ab0e836d0&gt;</msg>
<status status="PASS" starttime="20210421 11:18:44.945" endtime="20210421 11:18:44.946"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210421 11:18:44.946" endtime="20210421 11:18:44.946"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210421 11:18:44.946" endtime="20210421 11:18:44.946"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${LOGIN URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210421 11:18:44.946" level="INFO">Opening browser 'Chrome' to base url 'https://demo.themesberg.com/volt-react-dashboard/#/'.</msg>
<status status="PASS" starttime="20210421 11:18:44.946" endtime="20210421 11:18:55.718"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210421 11:18:55.719" endtime="20210421 11:18:56.037"/>
</kw>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<arg>${DELAY}</arg>
<doc>Sets the delay that is waited after each Selenium command.</doc>
<status status="PASS" starttime="20210421 11:18:56.037" endtime="20210421 11:18:56.038"/>
</kw>
<status status="PASS" starttime="20210421 11:18:44.945" endtime="20210421 11:18:56.038"/>
</kw>
<kw name="Volt React Page Should Be Open" library="VoltReactDashboardKeywords">
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>Volt React Dashboard</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20210421 11:18:57.068" level="INFO">Page title is 'Volt React Dashboard'.</msg>
<status status="PASS" starttime="20210421 11:18:56.038" endtime="20210421 11:18:57.069"/>
</kw>
<kw name="Take Custom Screenshot" library="Common">
<arg>HomePage</arg>
<kw name="Capture Custom Screenshot" library="script">
<arg>${REPORTOUTPUTDIR}${screen_shot_name}</arg>
<msg timestamp="20210421 11:18:59.274" level="INFO">./images/HomePage</msg>
<status status="PASS" starttime="20210421 11:18:57.071" endtime="20210421 11:18:59.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>&lt;img src=".${REPORTOUTPUTDIR}${screen_shot_name}.png"&gt;</arg>
<arg>HTML</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210421 11:18:59.276" level="INFO" html="true">&lt;img src="../images/HomePage.png"&gt;</msg>
<status status="PASS" starttime="20210421 11:18:59.275" endtime="20210421 11:18:59.276"/>
</kw>
<status status="PASS" starttime="20210421 11:18:57.070" endtime="20210421 11:18:59.277"/>
</kw>
<status status="PASS" starttime="20210421 11:18:56.038" endtime="20210421 11:18:59.277"/>
</kw>
<status status="PASS" starttime="20210421 11:18:44.945" endtime="20210421 11:18:59.278"/>
</kw>
<kw name="When I click on dashboard button" library="VoltReactDashboardKeywords">
<kw name="Click Link" library="SeleniumLibrary">
<arg>${HOME_DASHBOARD_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20210421 11:18:59.280" level="INFO">Clicking link '//*[@id="home"]/div/div/div/div[2]/a'.</msg>
<status status="PASS" starttime="20210421 11:18:59.279" endtime="20210421 11:19:02.916"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${OVERVIEW_DASHBOARD_LABEL}</arg>
<arg>timeout=${WAIT_TIMEOUT}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20210421 11:19:05.149" level="INFO">Element '//*[@id="root"]/div[2]/div[1]/div[2]/div/div/div/div/div[2]/div[2]/a/span/span[2]' is displayed.</msg>
<status status="PASS" starttime="20210421 11:19:02.917" endtime="20210421 11:19:05.150"/>
</kw>
<status status="PASS" starttime="20210421 11:18:59.278" endtime="20210421 11:19:05.151"/>
</kw>
<kw name="Then I should see dashboard page" library="VoltReactDashboardKeywords">
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${OVERVIEW_DASHBOARD_LABEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20210421 11:19:06.174" level="INFO">Current page contains element '//*[@id="root"]/div[2]/div[1]/div[2]/div/div/div/div/div[2]/div[2]/a/span/span[2]'.</msg>
<status status="PASS" starttime="20210421 11:19:05.154" endtime="20210421 11:19:06.175"/>
</kw>
<kw name="Take Custom Screenshot" library="Common">
<arg>DashboardHomePage</arg>
<kw name="Capture Custom Screenshot" library="script">
<arg>${REPORTOUTPUTDIR}${screen_shot_name}</arg>
<msg timestamp="20210421 11:19:08.370" level="INFO">./images/DashboardHomePage</msg>
<status status="PASS" starttime="20210421 11:19:06.177" endtime="20210421 11:19:08.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>&lt;img src=".${REPORTOUTPUTDIR}${screen_shot_name}.png"&gt;</arg>
<arg>HTML</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210421 11:19:08.372" level="INFO" html="true">&lt;img src="../images/DashboardHomePage.png"&gt;</msg>
<status status="PASS" starttime="20210421 11:19:08.371" endtime="20210421 11:19:08.372"/>
</kw>
<status status="PASS" starttime="20210421 11:19:06.175" endtime="20210421 11:19:08.373"/>
</kw>
<status status="PASS" starttime="20210421 11:19:05.152" endtime="20210421 11:19:08.373"/>
</kw>
<kw name="When I enter text in search box" library="VoltReactDashboardKeywords">
<kw name="Input Text" library="SeleniumLibrary">
<arg>${SEARCH_TEXTBOX}</arg>
<arg>"test"</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210421 11:19:08.375" level="INFO">Typing text '"test"' into text field '//*[@id="topbarSearch"]/div/input'.</msg>
<status status="PASS" starttime="20210421 11:19:08.375" endtime="20210421 11:19:11.951"/>
</kw>
<status status="PASS" starttime="20210421 11:19:08.374" endtime="20210421 11:19:11.952"/>
</kw>
<kw name="And I click on enter button" library="VoltReactDashboardKeywords">
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${SEARCH_TEXTBOX}</arg>
<arg>ENTER</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210421 11:19:11.955" level="INFO">Sending key(s) ('ENTER',) to //*[@id="topbarSearch"]/div/input element.</msg>
<msg timestamp="20210421 11:19:14.334" level="INFO">Pressing special key ENTER to element.</msg>
<msg timestamp="20210421 11:19:14.335" level="INFO">Releasing special key ENTER.</msg>
<status status="PASS" starttime="20210421 11:19:11.953" endtime="20210421 11:19:16.909"/>
</kw>
<status status="PASS" starttime="20210421 11:19:11.952" endtime="20210421 11:19:16.910"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20210421 11:19:16.911" endtime="20210421 11:19:17.989"/>
</kw>
<status status="PASS" starttime="20210421 11:18:44.945" endtime="20210421 11:19:17.989"/>
</test>
<doc>A test suite with a single Gherkin style test.</doc>
<status status="PASS" starttime="20210421 11:18:44.853" endtime="20210421 11:19:17.990"/>
</suite>
<status status="PASS" starttime="20210421 11:18:44.852" endtime="20210421 11:19:17.992"/>
</suite>
<status status="PASS" starttime="20210421 11:18:44.841" endtime="20210421 11:19:17.993"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Testscripts">Tests.Testscripts</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="test Volt React Browse Dashboard">Tests.Testscripts.test Volt React Browse Dashboard</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
